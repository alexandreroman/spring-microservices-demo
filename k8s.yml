---
apiVersion: v1
kind: Namespace
metadata:
  name: spring-microservices
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: spring-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: alexandreroman/spring-microservices-gateway
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 10
            failureThreshold: 4
        - name: redis
          image: redis:5
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  namespace: spring-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
        - name: echo
          image: alexandreroman/spring-microservices-echo
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 10
            failureThreshold: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greeting
  namespace: spring-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: greeting
  template:
    metadata:
      labels:
        app: greeting
    spec:
      containers:
        - name: greeting
          image: alexandreroman/spring-microservices-greeting
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 10
            failureThreshold: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: time
  namespace: spring-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: time
  template:
    metadata:
      labels:
        app: time
    spec:
      containers:
        - name: time
          image: alexandreroman/spring-microservices-time
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 10
            failureThreshold: 4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
  namespace: spring-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whoami
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami
          image: alexandreroman/spring-microservices-whoami
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            timeoutSeconds: 10
            failureThreshold: 4
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-lb
  labels:
    app: gateway
  namespace: spring-microservices
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: gateway
---
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: spring-microservices
spec:
  ports:
    - name: echo
      port: 8080
      protocol: TCP
  selector:
    app: echo
---
apiVersion: v1
kind: Service
metadata:
  name: greeting
  namespace: spring-microservices
spec:
  ports:
    - name: greeting
      port: 8080
      protocol: TCP
  selector:
    app: greeting
---
apiVersion: v1
kind: Service
metadata:
  name: time
  namespace: spring-microservices
spec:
  ports:
    - name: time
      port: 8080
      protocol: TCP
  selector:
    app: time
---
apiVersion: v1
kind: Service
metadata:
  name: whoami
  namespace: spring-microservices
spec:
  ports:
    - name: whoami
      port: 8080
      protocol: TCP
  selector:
    app: whoami
